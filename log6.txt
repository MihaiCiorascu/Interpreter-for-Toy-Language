
ProgramState{
Program id: 0
ExeStack:
Ref(integer) v
(NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5)))))
--------------------------------------

SymTable:

Heap:
(the heap is empty)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
NewStmt(v, 20)
(Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))
--------------------------------------
Ref(integer) v
--------------------------------------

SymTable:

Heap:
(the heap is empty)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
NewStmt(v, 20)
(Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))
--------------------------------------
Ref(integer) v
--------------------------------------

SymTable:

Heap:
(the heap is empty)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
NewStmt(v, 20)
(Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))
--------------------------------------

SymTable:
v -> RefValue(0, integer)

Heap:
(the heap is empty)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
NewStmt(v, 20)
(Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))
--------------------------------------

SymTable:
v -> RefValue(0, integer)

Heap:
(the heap is empty)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
Ref(Ref(integer)) a
(NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5)))
--------------------------------------
NewStmt(v, 20)
--------------------------------------

SymTable:
v -> RefValue(0, integer)

Heap:
(the heap is empty)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
Ref(Ref(integer)) a
(NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5)))
--------------------------------------
NewStmt(v, 20)
--------------------------------------

SymTable:
v -> RefValue(0, integer)

Heap:
(the heap is empty)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
Ref(Ref(integer)) a
(NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5)))
--------------------------------------

SymTable:
v -> RefValue(1, integer)

Heap:
1 -> 20

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
Ref(Ref(integer)) a
(NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5)))
--------------------------------------

SymTable:
v -> RefValue(1, integer)

Heap:
1 -> 20

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
NewStmt(a, v)
(print(RefExp(v)); print(RefExp(RefExp(a)) + 5))
--------------------------------------
Ref(Ref(integer)) a
--------------------------------------

SymTable:
v -> RefValue(1, integer)

Heap:
1 -> 20

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
NewStmt(a, v)
(print(RefExp(v)); print(RefExp(RefExp(a)) + 5))
--------------------------------------
Ref(Ref(integer)) a
--------------------------------------

SymTable:
v -> RefValue(1, integer)

Heap:
1 -> 20

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
NewStmt(a, v)
(print(RefExp(v)); print(RefExp(RefExp(a)) + 5))
--------------------------------------

SymTable:
a -> RefValue(0, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
NewStmt(a, v)
(print(RefExp(v)); print(RefExp(RefExp(a)) + 5))
--------------------------------------

SymTable:
a -> RefValue(0, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
print(RefExp(v))
print(RefExp(RefExp(a)) + 5)
--------------------------------------
NewStmt(a, v)
--------------------------------------

SymTable:
a -> RefValue(0, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
print(RefExp(v))
print(RefExp(RefExp(a)) + 5)
--------------------------------------
NewStmt(a, v)
--------------------------------------

SymTable:
a -> RefValue(0, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
print(RefExp(v))
print(RefExp(RefExp(a)) + 5)
--------------------------------------

SymTable:
a -> RefValue(2, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20
2 -> RefValue(1, integer)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
print(RefExp(v))
print(RefExp(RefExp(a)) + 5)
--------------------------------------

SymTable:
a -> RefValue(2, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20
2 -> RefValue(1, integer)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
print(RefExp(RefExp(a)) + 5)
--------------------------------------
print(RefExp(v))
--------------------------------------

SymTable:
a -> RefValue(2, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20
2 -> RefValue(1, integer)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
print(RefExp(RefExp(a)) + 5)
--------------------------------------
print(RefExp(v))
--------------------------------------

SymTable:
a -> RefValue(2, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20
2 -> RefValue(1, integer)

Out:

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
print(RefExp(RefExp(a)) + 5)
--------------------------------------

SymTable:
a -> RefValue(2, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20
2 -> RefValue(1, integer)

Out:
20

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:
print(RefExp(RefExp(a)) + 5)
--------------------------------------

SymTable:
a -> RefValue(2, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20
2 -> RefValue(1, integer)

Out:
20

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}




ProgramState{
Program id: 0
ExeStack:

SymTable:
a -> RefValue(2, Ref(integer))
v -> RefValue(1, integer)

Heap:
1 -> 20
2 -> RefValue(1, integer)

Out:
20
25

OriginalProgram: (Ref(integer) v; (NewStmt(v, 20); (Ref(Ref(integer)) a; (NewStmt(a, v); (print(RefExp(v)); print(RefExp(RefExp(a)) + 5))))))
FileTable:

}



